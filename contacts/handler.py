from colorama import Fore
from address_book.models import Contact, Phone, Email, Address, Birthday
from data.storage import save_data

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É

def add_contact(book):
    print(Fore.GREEN + "\n+ –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è)")

    name = input("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è: ").strip()
    if not name:
        print(Fore.YELLOW + "–î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
        return

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä—ñ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    phones = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É (10 —Ü–∏—Ñ—Ä, —á–µ—Ä–µ–∑ –∫–æ–º—É), –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É: ").split(',')
    phones = [p.strip() for p in phones if p.strip()] if phones else []

    email = input("–í–≤–µ–¥—ñ—Ç—å email –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É: ").strip() or None
    address = input("–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É: ").strip() or None
    birthday = input("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–î–î.–ú–ú.–†–†–†–†) –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É: ").strip() or None

    try:
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç—É —Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –∫–Ω–∏–≥–∏
        contact = Contact(name=name, phones=phones, email=email, address=address, birthday=birthday)
        book.add_contact(contact)
        save_data(book, None)  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –∫–Ω–∏–≥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
        print(Fore.GREEN + "\n‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!")
    except ValueError as e:
        print(Fore.RED + f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

# –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É

def edit_contact(book):
    name = input("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: ").strip()
    contact = book.get_contact(name)
    if not contact:
        print(Fore.RED + "–ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    print(Fore.YELLOW + f"–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è {name} (–∑–∞–ª–∏—à—Ç–µ –ø–æ–ª–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è)")

    new_phones = input("–ù–æ–≤—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É): ").strip()
    if new_phones:
        contact.phones = [Phone(p.strip()) for p in new_phones.split(',')]

    new_email = input("–ù–æ–≤–∏–π email: ").strip()
    if new_email:
        contact.email = Email(new_email)

    new_address = input("–ù–æ–≤–∞ –∞–¥—Ä–µ—Å–∞: ").strip()
    if new_address:
        contact.address = Address(new_address)

    new_bday = input("–ù–æ–≤–∞ –¥–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–î–î.–ú–ú.–†–†–†–†): ").strip()
    if new_bday:
        contact.birthday = Birthday(new_bday)

    save_data(book, None)  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–Ω–∏–≥–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
    print(Fore.GREEN + "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ.")

# –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É

def delete_contact(book):
    name = input("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ").strip()
    if book.get_contact(name):
        book.delete_contact(name)
        save_data(book, None)
        print(Fore.GREEN + "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –≤–∏–¥–∞–ª–µ–Ω–æ.")
    else:
        print(Fore.RED + "‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

# –ü–æ—à—É–∫ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º

def search_contacts(book):
    keyword = input("–í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ—à—É–∫—É: ").strip()
    results = book.find_contacts(keyword)
    if results:
        print(Fore.CYAN + f"\nüîç –ó–Ω–∞–π–¥–µ–Ω–æ {len(results)} –∫–æ–Ω—Ç–∞–∫—Ç(—ñ–≤):")
        for contact in results:
            print(contact)
    else:
        print(Fore.YELLOW + "–ö–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

# –í–∏–≤–µ–¥–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤

def show_all_contacts(book):
    if not book.data:
        print(Fore.YELLOW + "–ù–µ–º–∞—î –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")
    else:
        for contact in book.data.values():
            print(contact)

# –ü–æ—à—É–∫ –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è, —â–æ –Ω–∞–±–ª–∏–∂–∞—é—Ç—å—Å—è

def birthdays_reminder(book):
    try:
        days = int(input("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤: "))
        results = book.upcoming_birthdays(days)
        if results:
            print(Fore.CYAN + f"–î–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤ –º–µ–∂–∞—Ö {days} –¥–Ω—ñ–≤:")
            for c in results:
                print(c)
        else:
            print(Fore.YELLOW + "–ù–µ–º–∞—î –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤ –∑–∞–¥–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.")
    except ValueError:
        print(Fore.RED + "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ.")